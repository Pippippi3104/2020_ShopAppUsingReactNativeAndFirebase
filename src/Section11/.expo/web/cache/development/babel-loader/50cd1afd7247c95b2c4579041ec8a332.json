{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section11/src/screens/UserScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport firebase from \"firebase\";\nimport { updateUser } from \"../lib/firebase\";\nimport { Form } from \"../components/Form\";\nimport { Button } from \"../components/Button\";\nimport { Loading } from \"../components/Loading\";\nimport { UserContext } from \"../contexts/userContexts\";\nexport var UserScreen = function UserScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState = useState(user.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var onSubmit = function onSubmit() {\n    var updatedAt;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            updatedAt = firebase.firestore.Timestamp.now();\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(updateUser(user.id, {\n              name: name,\n              updatedAt: updatedAt\n            }));\n\n          case 4:\n            setUser(_objectSpread(_objectSpread({}, user), {}, {\n              name: name,\n              updatedAt: updatedAt\n            }));\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Form, {\n    value: name,\n    onChangeText: function onChangeText(text) {\n      setName(text);\n    },\n    label: \"\\u540D\\u524D\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: onSubmit,\n    text: \"\\u4FDD\\u5B58\\u3059\\u308B\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Loading, {\n    visible: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section11/src/screens/UserScreen.tsx"],"names":["React","useState","useContext","firebase","updateUser","Form","Button","Loading","UserContext","UserScreen","navigation","route","user","setUser","name","setName","loading","setLoading","onSubmit","updatedAt","firestore","Timestamp","now","id","styles","container","text","StyleSheet","create","flex","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,UAAT;AAGA,SAASC,IAAT;AACA,SAASC,MAAT;AACA,SAASC,OAAT;AAGA,SAAQC,WAAR;AAYA,OAAO,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAAkC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;;AAAA,oBACnDT,UAAU,CAACM,WAAD,CADyC;AAAA,MACpEI,IADoE,eACpEA,IADoE;AAAA,MAC9DC,OAD8D,eAC9DA,OAD8D;;AAAA,kBAEnDZ,QAAQ,CAASW,IAAI,CAACE,IAAd,CAF2C;AAAA;AAAA,MAEpEA,IAFoE;AAAA,MAE9DC,OAF8D;;AAAA,mBAG7Cd,QAAQ,CAAU,KAAV,CAHqC;AAAA;AAAA,MAGpEe,OAHoE;AAAA,MAG3DC,UAH2D;;AAK3E,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACfD,YAAAA,UAAU,CAAC,IAAD,CAAV;AACME,YAAAA,SAFS,GAEGhB,QAAQ,CAACiB,SAAT,CAAmBC,SAAnB,CAA6BC,GAA7B,EAFH;AAAA;AAAA,6CAGTlB,UAAU,CAACQ,IAAI,CAACW,EAAN,EAAU;AAAET,cAAAA,IAAI,EAAJA,IAAF;AAAQK,cAAAA,SAAS,EAATA;AAAR,aAAV,CAHD;;AAAA;AAIfN,YAAAA,OAAO,iCAAKD,IAAL;AAAWE,cAAAA,IAAI,EAAJA,IAAX;AAAiBK,cAAAA,SAAS,EAATA;AAAjB,eAAP;AACAF,YAAAA,UAAU,CAAC,KAAD,CAAV;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEO,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,IAAb;AAAmB,IAAA,YAAY,EAAE,sBAACY,IAAD,EAAS;AAACX,MAAAA,OAAO,CAACW,IAAD,CAAP;AAAc,KAAzD;AAA2D,IAAA,KAAK,EAAC,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,QAAjB;AAA2B,IAAA,IAAI,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEF,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CApBM;AAsBP,IAAMQ,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport { StyleSheet, SafeAreaView, Text } from \"react-native\";\nimport firebase from \"firebase\";\nimport { updateUser } from \"../lib/firebase\";\n\n/* components */\nimport { Form } from \"../components/Form\";\nimport { Button } from \"../components/Button\";\nimport { Loading } from \"../components/Loading\";\n\n/* contexts */\nimport {UserContext} from \"../contexts/userContexts\";\n\n/* types */\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { RootStackParamList } from \"../types/navigation\";\nimport { RouteProp } from \"@react-navigation/native\";\n\ntype Props = {\n  navigation: StackNavigationProp<RootStackParamList, \"User\">;\n  route: RouteProp<RootStackParamList, \"User\">;\n};\n\nexport const UserScreen: React.FC<Props> = ({ navigation, route }: Props) => {\n  const {user, setUser} = useContext(UserContext);\n  const [name, setName] = useState<String>(user.name);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onSubmit = async () => {\n    setLoading(true);\n    const updatedAt = firebase.firestore.Timestamp.now();\n    await updateUser(user.id, { name, updatedAt });\n    setUser({...user, name, updatedAt});\n    setLoading(false);\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Form value={name} onChangeText={(text) =>{setName(text)}} label=\"名前\" />\n      <Button onPress={onSubmit} text=\"保存する\" />\n      <Loading visible={loading} />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}