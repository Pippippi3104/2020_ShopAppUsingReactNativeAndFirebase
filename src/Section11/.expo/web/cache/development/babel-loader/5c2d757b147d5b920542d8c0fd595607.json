{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport algoliasearch from \"algoliasearch\";\nimport Constants from \"expo-constants\";\nvar client = algoliasearch(Constants.manifest.extra.algolia.appId, Constants.manifest.extra.algolia.searchApiKey);\nexport var searchReview = function searchReview(query) {\n  var index;\n  return _regeneratorRuntime.async(function searchReview$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          index = client.initIndex(\"reviews\");\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(index.search(query));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section11/src/lib/algolia.ts"],"names":["algoliasearch","Constants","client","manifest","extra","algolia","appId","searchApiKey","searchReview","query","index","initIndex","search"],"mappings":";AACA,OAAOA,aAAP,MAA4C,eAA5C;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,IAAMC,MAAoB,GAAGF,aAAa,CACxCC,SAAS,CAACE,QAAV,CAAmBC,KAAnB,CAAyBC,OAAzB,CAAiCC,KADO,EAExCL,SAAS,CAACE,QAAV,CAAmBC,KAAnB,CAAyBC,OAAzB,CAAiCE,YAFO,CAA1C;AAKA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,KADoB,GACZR,MAAM,CAACS,SAAP,CAAiB,SAAjB,CADY;AAAA;AAAA,2CAEbD,KAAK,CAACE,MAAN,CAAaH,KAAb,CAFa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["\nimport algoliasearch, { SearchClient } from \"algoliasearch\";\nimport Constants from \"expo-constants\";\n\nconst client: SearchClient = algoliasearch(\n  Constants.manifest.extra.algolia.appId,\n  Constants.manifest.extra.algolia.searchApiKey\n);\n\nexport const searchReview = async (query: string) => {\n  const index = client.initIndex(\"reviews\");\n  return await index.search(query);\n};"]},"metadata":{},"sourceType":"module"}