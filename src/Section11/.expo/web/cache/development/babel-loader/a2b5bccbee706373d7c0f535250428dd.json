{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section11/src/screens/SearchScreen.tsx\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { searchReview } from \"../lib/algolia\";\nimport { SearchReviewItem } from \"../components/SearchReviewItem\";\nexport var SearchScreen = function SearchScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyword = _useState2[0],\n      setKeyword = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reviews = _useState4[0],\n      setReviews = _useState4[1];\n\n  var onChangeText = function onChangeText(text) {\n    var result, _reviews;\n\n    return _regeneratorRuntime.async(function onChangeText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setKeyword(text);\n\n            if (text) {\n              _context.next = 5;\n              break;\n            }\n\n            setReviews([]);\n            _context.next = 9;\n            break;\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(searchReview(text));\n\n          case 7:\n            result = _context.sent;\n\n            if (result.hits.length > 0) {\n              _reviews = result.hits.map(function (hit) {\n                return hit;\n              });\n              setReviews(_reviews);\n            } else {\n              setReviews([]);\n            }\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"\\u691C\\u7D22\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\",\n    onChangeText: onChangeText,\n    value: keyword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(SearchReviewItem, {\n        review: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"flex-start\"\n  },\n  input: {\n    height: 50,\n    borderColor: \"#999\",\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    fontSize: 18,\n    margin: 16\n  }\n});","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section11/src/screens/SearchScreen.tsx"],"names":["React","useState","searchReview","SearchReviewItem","SearchScreen","navigation","route","keyword","setKeyword","reviews","setReviews","onChangeText","text","result","hits","length","map","hit","styles","container","input","item","id","StyleSheet","create","flex","backgroundColor","justifyContent","height","borderColor","borderWidth","borderRadius","paddingHorizontal","fontSize","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAKA,SAASC,YAAT;AAGA,SAASC,gBAAT;AAOA,OAAO,IAAMC,YAA6B,GAAG,SAAhCA,YAAgC,OAAkC;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;;AAAA,kBAC/CL,QAAQ,EADuC;AAAA;AAAA,MACtEM,OADsE;AAAA,MAC7DC,UAD6D;;AAAA,mBAE/CP,QAAQ,CAAW,EAAX,CAFuC;AAAA;AAAA,MAEtEQ,OAFsE;AAAA,MAE7DC,UAF6D;;AAI7E,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBJ,YAAAA,UAAU,CAACI,IAAD,CAAV;;AADmB,gBAEdA,IAFc;AAAA;AAAA;AAAA;;AAGjBF,YAAAA,UAAU,CAAC,EAAD,CAAV;AAHiB;AAAA;;AAAA;AAAA;AAAA,6CAKIR,YAAY,CAACU,IAAD,CALhB;;AAAA;AAKXC,YAAAA,MALW;;AAMjB,gBAAIA,MAAM,CAACC,IAAP,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AACpBN,cAAAA,QADoB,GACVI,MAAM,CAACC,IAAP,CAAYE,GAAZ,CAAgB,UAACC,GAAD,EAAS;AACvC,uBAAQA,GAAR;AACD,eAFe,CADU;AAI1BP,cAAAA,UAAU,CAACD,QAAD,CAAV;AACD,aALD,MAKO;AACLC,cAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAiBA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,IAAA,WAAW,EAAC,4CAFd;AAGE,IAAA,YAAY,EAAET,YAHhB;AAIE,IAAA,KAAK,EAAEJ,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,OADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGY,IAAH,SAAGA,IAAH;AAAA,aAAc,oBAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAFd;AAGE,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAf;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD,CApCM;AAsCP,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,WAAW,EAAE,MAFR;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,iBAAiB,EAAE,EALd;AAMLC,IAAAA,QAAQ,EAAE,EANL;AAOLC,IAAAA,MAAM,EAAE;AAPH;AANwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, SafeAreaView, TextInput, FlatList } from \"react-native\";\nimport { StackNavigationProp } from \"@react-navigation/stack/lib/typescript/src/types\";\nimport { RouteProp } from \"@react-navigation/native\";\nimport { RootStackParamList } from \"../types/navigation\";\nimport { searchReview } from \"../lib/algolia\";\nimport { Review } from \"../types/review\";\n/* components */\nimport { SearchReviewItem } from \"../components/SearchReviewItem\";\n/* types */\ntype Props = {\n  navigation: StackNavigationProp<RootStackParamList, \"Search\">;\n  route: RouteProp<RootStackParamList, \"Search\">;\n};\n\nexport const SearchScreen: React.FC<Props> = ({ navigation, route }: Props) => {\n  const [keyword, setKeyword] = useState<string>();\n  const [reviews, setReviews] = useState<Review[]>([]);\n\n  const onChangeText = async (text: string) => {\n    setKeyword(text);\n    if (!text) {\n      setReviews([]);\n    } else {\n      const result = await searchReview(text);\n      if (result.hits.length > 0) {\n        const reviews = result.hits.map((hit) => {\n          return (hit as unknown) as Review;\n        });\n        setReviews(reviews);\n      } else {\n        setReviews([]);\n      }\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"検索キーワード\"\n        onChangeText={onChangeText}\n        value={keyword}\n      />\n      <FlatList\n        data={reviews}\n        renderItem={({ item }) => <SearchReviewItem review={item} />}\n        keyExtractor={(item) => item.id}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"flex-start\",\n  },\n  input: {\n    height: 50,\n    borderColor: \"#999\",\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    fontSize: 18,\n    margin: 16,\n  },\n});"]},"metadata":{},"sourceType":"module"}