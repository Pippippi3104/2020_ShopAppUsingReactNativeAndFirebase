{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport Constants from \"expo-constants\";\nimport { initialUser } from \"../types/user\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Constants.manifest.extra.firebase);\n}\n\nexport var getShops = function getShops() {\n  var snapshot, shops;\n  return _regeneratorRuntime.async(function getShops$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"shops\").orderBy(\"score\", \"desc\").get());\n\n        case 3:\n          snapshot = _context.sent;\n          shops = snapshot.docs.map(function (doc) {\n            return doc.data();\n          });\n          return _context.abrupt(\"return\", shops);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var signin = function signin() {\n  var userCredintial, uid, userDoc;\n  return _regeneratorRuntime.async(function signin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n        case 2:\n          userCredintial = _context2.sent;\n          uid = userCredintial.user.uid;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"users\").doc(uid).get());\n\n        case 6:\n          userDoc = _context2.sent;\n\n          if (userDoc.exists) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"users\").doc(uid).set(initialUser));\n\n        case 10:\n          return _context2.abrupt(\"return\", _objectSpread(_objectSpread({}, initialUser), {}, {\n            id: uid\n          }));\n\n        case 13:\n          return _context2.abrupt(\"return\", _objectSpread({\n            id: uid\n          }, userDoc.data()));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var updateUser = function updateUser(userId, params) {\n  return _regeneratorRuntime.async(function updateUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"users\").doc(userId).update(params));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section06/src/lib/firebase.ts"],"names":["firebase","Constants","initialUser","apps","length","initializeApp","manifest","extra","getShops","firestore","collection","orderBy","get","snapshot","shops","docs","map","doc","data","console","log","signin","auth","signInAnonymously","userCredintial","uid","user","userDoc","exists","set","id","updateUser","userId","params","update"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAIA,SAASC,WAAT;;AAEA,IAAI,CAACF,QAAQ,CAACG,IAAT,CAAcC,MAAnB,EAA2B;AACzBJ,EAAAA,QAAQ,CAACK,aAAT,CAAuBJ,SAAS,CAACK,QAAV,CAAmBC,KAAnB,CAAyBP,QAAhD;AACD;;AAED,OAAO,IAAMQ,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEGR,QAAQ,CAC5BS,SADoB,GAEpBC,UAFoB,CAET,OAFS,EAGpBC,OAHoB,CAGZ,OAHY,EAGH,MAHG,EAIpBC,GAJoB,EAFH;;AAAA;AAEdC,UAAAA,QAFc;AAOdC,UAAAA,KAPc,GAOND,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAArB,CAPM;AAAA,2CAQbJ,KARa;;AAAA;AAAA;AAAA;AAUpBK,UAAAA,OAAO,CAACC,GAAR;;AAVoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAcP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACSrB,QAAQ,CAACsB,IAAT,GAAgBC,iBAAhB,EADT;;AAAA;AACdC,UAAAA,cADc;AAEZC,UAAAA,GAFY,GAEJD,cAAc,CAACE,IAFX,CAEZD,GAFY;AAAA;AAAA,2CAGEzB,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCO,GAAzC,CAA6CQ,GAA7C,EAAkDb,GAAlD,EAHF;;AAAA;AAGde,UAAAA,OAHc;;AAAA,cAIhBA,OAAO,CAACC,MAJQ;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAKZ5B,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCO,GAAzC,CAA6CQ,GAA7C,EAAkDI,GAAlD,CAAsD3B,WAAtD,CALY;;AAAA;AAAA,4EAObA,WAPa;AAQhB4B,YAAAA,EAAE,EAAEL;AARY;;AAAA;AAAA;AAYhBK,YAAAA,EAAE,EAAEL;AAZY,aAabE,OAAO,CAACT,IAAR,EAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAkBP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAAOC,MAAP,EAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAClBjC,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCO,GAAzC,CAA6Ce,MAA7C,EAAqDE,MAArD,CAA4DD,MAA5D,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport Constants from \"expo-constants\";\n\n/* types */\nimport { Shop } from \"../types/shop\";\nimport { initialUser, User } from \"../types/user\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Constants.manifest.extra.firebase);\n}\n\nexport const getShops = async() => {\n  try{\n    const snapshot = await firebase\n      .firestore()\n      .collection(\"shops\")\n      .orderBy(\"score\", \"desc\")\n      .get();\n    const shops = snapshot.docs.map(doc => doc.data() as Shop);\n    return shops;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const signin = async () => {\n  const userCredintial = await firebase.auth().signInAnonymously();\n  const { uid } = userCredintial.user;\n  const userDoc = await firebase.firestore().collection(\"users\").doc(uid).get();\n  if(!userDoc.exists){\n    await firebase.firestore().collection(\"users\").doc(uid).set(initialUser);\n    return {\n      ...initialUser,\n      id: uid\n    } as User;\n  }else {\n    return {\n      id: uid,\n      ...userDoc.data()\n    } as User;\n  }\n};\n\nexport const updateUser = async (userId: string, params: any) => {\n  await firebase.firestore().collection(\"users\").doc(userId).update(params);\n};"]},"metadata":{},"sourceType":"module"}