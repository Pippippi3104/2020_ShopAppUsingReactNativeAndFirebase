{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\n\nvar getCameraRollPermission = function getCameraRollPermission() {\n  var _await$ImagePicker$ge, status;\n\n  return _regeneratorRuntime.async(function getCameraRollPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!Constants.platform.ios) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n        case 3:\n          _await$ImagePicker$ge = _context.sent;\n          status = _await$ImagePicker$ge.status;\n\n          if (status !== \"granted\") {\n            alert(\"画像を選択するためにはカメラロールの許可が必要です\");\n          }\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport var pickImage = function pickImage() {\n  var result;\n  return _regeneratorRuntime.async(function pickImage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getCameraRollPermission());\n\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: false\n          }));\n\n        case 4:\n          result = _context2.sent;\n\n          if (result.cancelled) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", result.uri);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section06/src/lib/image-picker.ts"],"names":["ImagePicker","Constants","getCameraRollPermission","platform","ios","getCameraPermissionsAsync","status","alert","pickImage","launchCameraAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","result","cancelled","uri"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eACzBD,SAAS,CAACE,QAAV,CAAmBC,GADM;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAEDJ,WAAW,CAACK,yBAAZ,EAFC;;AAAA;AAAA;AAEjBC,UAAAA,MAFiB,yBAEjBA,MAFiB;;AAGxB,cAAGA,MAAM,KAAK,SAAd,EAAyB;AACrBC,YAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AASA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACfN,uBAAuB,EADR;;AAAA;AAAA;AAAA,2CAGAF,WAAW,CAACS,iBAAZ,CAA8B;AAC/CC,YAAAA,UAAU,EAAEV,WAAW,CAACW,gBAAZ,CAA6BC,MADM;AAE/CC,YAAAA,aAAa,EAAE;AAFgC,WAA9B,CAHA;;AAAA;AAGfC,UAAAA,MAHe;;AAAA,cAOjBA,MAAM,CAACC,SAPU;AAAA;AAAA;AAAA;;AAAA,4CAQVD,MAAM,CAACE,GARG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\n\nconst getCameraRollPermission = async () => {\n    if(Constants.platform.ios){\n        const {status} = await ImagePicker.getCameraPermissionsAsync();\n        if(status !== \"granted\") {\n            alert(\"画像を選択するためにはカメラロールの許可が必要です\")\n        }\n    }\n}\n\nexport const pickImage = async () => {\n    await getCameraRollPermission();\n\n    const result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false\n    });\n    if(!result.cancelled) {\n        return result.uri;\n    }\n}"]},"metadata":{},"sourceType":"module"}