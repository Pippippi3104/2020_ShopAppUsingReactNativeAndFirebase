{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section06/src/components/StarInput.tsx\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nexport var StarInput = function StarInput(_ref) {\n  var score = _ref.score,\n      starSize = _ref.starSize,\n      onChangeScore = _ref.onChangeScore;\n  var starStyle = [styles.star, starSize && {\n    fontSize: starSize\n  }];\n  var stars = [1, 2, 3, 4, 5].map(function (starCount) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onChangeScore(starCount);\n      },\n      key: starCount.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, React.createElement(FontAwesome, {\n      style: starStyle,\n      name: score >= starCount ? \"star\" : \"star-o\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }, stars);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 16,\n    paddingHorizontal: 16\n  },\n  star: {\n    marginRight: 8,\n    fontSize: 24,\n    color: \"#900\"\n  },\n  scoreText: {\n    fontSize: 14,\n    color: \"#000\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section06/src/components/StarInput.tsx"],"names":["React","FontAwesome","TouchableOpacity","StarInput","score","starSize","onChangeScore","starStyle","styles","star","fontSize","stars","map","starCount","toString","container","StyleSheet","create","flexDirection","alignItems","paddingVertical","paddingHorizontal","marginRight","color","scoreText","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAQA,OAAO,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAI7B;AAAA,MAHXC,KAGW,QAHXA,KAGW;AAAA,MAFXC,QAEW,QAFXA,QAEW;AAAA,MADXC,aACW,QADXA,aACW;AACX,MAAMC,SAAS,GAAG,CAACC,MAAM,CAACC,IAAR,EAAcJ,QAAQ,IAAI;AAAEK,IAAAA,QAAQ,EAAEL;AAAZ,GAA1B,CAAlB;AAEA,MAAMM,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBC,GAAhB,CAAoB,UAACC,SAAD;AAAA,WAChC,oBAAC,gBAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMP,aAAa,CAACO,SAAD,CAAnB;AAAA,OADX;AAEE,MAAA,GAAG,EAAEA,SAAS,CAACC,QAAV,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEP,SADT;AAEE,MAAA,IAAI,EAAEH,KAAK,IAAIS,SAAT,GAAqB,MAArB,GAA8B,QAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADgC;AAAA,GAApB,CAAd;AAYA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,KAAhC,CAAP;AACD,CApBM;AAsBP,IAAMH,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,eAAe,EAAE,EAHR;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BZ,EAAAA,IAAI,EAAE;AACJa,IAAAA,WAAW,EAAE,CADT;AAEJZ,IAAAA,QAAQ,EAAE,EAFN;AAGJa,IAAAA,KAAK,EAAE;AAHH,GAPyB;AAY/BC,EAAAA,SAAS,EAAE;AACTd,IAAAA,QAAQ,EAAE,EADD;AAETa,IAAAA,KAAK,EAAE,MAFE;AAGTE,IAAAA,UAAU,EAAE;AAHH;AAZoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\ntype Props = {\n  score: number;\n  starSize?: number;\n  onChangeScore: (value: number) => void;\n};\n\nexport const StarInput: React.FC<Props> = ({\n  score,\n  starSize,\n  onChangeScore,\n}: Props) => {\n  const starStyle = [styles.star, starSize && { fontSize: starSize }];\n\n  const stars = [1, 2, 3, 4, 5].map((starCount) => (\n    <TouchableOpacity\n      onPress={() => onChangeScore(starCount)}\n      key={starCount.toString()}\n    >\n      <FontAwesome\n        style={starStyle}\n        name={score >= starCount ? \"star\" : \"star-o\"}\n      />\n    </TouchableOpacity>\n  ));\n\n  return <View style={styles.container}>{stars}</View>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 16,\n    paddingHorizontal: 16,\n  },\n  star: {\n    marginRight: 8,\n    fontSize: 24,\n    color: \"#900\",\n  },\n  scoreText: {\n    fontSize: 14,\n    color: \"#000\",\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}