{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport Constants from \"expo-constants\";\nimport { initialUser } from \"../types/user\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Constants.manifest.extra.firebase);\n}\n\nexport var getShops = function getShops() {\n  var snapshot, shops;\n  return _regeneratorRuntime.async(function getShops$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"shops\").orderBy(\"score\", \"desc\").get());\n\n        case 2:\n          snapshot = _context.sent;\n          shops = snapshot.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          });\n          return _context.abrupt(\"return\", shops);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signin = function signin() {\n  var userCredential, uid, userDoc;\n  return _regeneratorRuntime.async(function signin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n        case 2:\n          userCredential = _context2.sent;\n          uid = userCredential.user.uid;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"users\").doc(uid).get());\n\n        case 6:\n          userDoc = _context2.sent;\n\n          if (userDoc.exists) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"users\").doc(uid).set(initialUser));\n\n        case 10:\n          return _context2.abrupt(\"return\", _objectSpread(_objectSpread({}, initialUser), {}, {\n            id: uid\n          }));\n\n        case 13:\n          return _context2.abrupt(\"return\", _objectSpread({\n            id: uid\n          }, userDoc.data()));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var updateUser = function updateUser(userId, params) {\n  return _regeneratorRuntime.async(function updateUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"users\").doc(userId).update(params));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var createReviewRef = function createReviewRef(shopId) {\n  return _regeneratorRuntime.async(function createReviewRef$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"shops\").doc(shopId).collection(\"reviews\").doc());\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var uploadImage = function uploadImage(uri, path) {\n  var localUri, blob, ref, downloadUrl;\n  return _regeneratorRuntime.async(function uploadImage$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(fetch(uri));\n\n        case 2:\n          localUri = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(localUri.blob());\n\n        case 5:\n          blob = _context5.sent;\n          ref = firebase.storage().ref().child(path);\n          downloadUrl = \"\";\n          _context5.prev = 8;\n          _context5.next = 11;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 11:\n          _context5.next = 13;\n          return _regeneratorRuntime.awrap(ref.getDownloadURL());\n\n        case 13:\n          downloadUrl = _context5.sent;\n          _context5.next = 19;\n          break;\n\n        case 16:\n          _context5.prev = 16;\n          _context5.t0 = _context5[\"catch\"](8);\n          console.log(_context5.t0);\n\n        case 19:\n          return _context5.abrupt(\"return\", downloadUrl);\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[8, 16]], Promise);\n};\nexport var getReviews = function getReviews(shopId) {\n  var reviewDocs;\n  return _regeneratorRuntime.async(function getReviews$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection(\"shops\").doc(shopId).collection(\"reviews\").orderBy(\"createdAt\", \"desc\").get());\n\n        case 2:\n          reviewDocs = _context6.sent;\n          return _context6.abrupt(\"return\", reviewDocs.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          }));\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/satoshishimamurasecond/Desktop/SatoshiShimamura/60_Udemy/2020_ShopAppUsingReactNativeAndFirebase/src/Section06/src/lib/firebase.ts"],"names":["firebase","Constants","initialUser","apps","length","initializeApp","manifest","extra","getShops","firestore","collection","orderBy","get","snapshot","shops","docs","map","doc","data","id","signin","auth","signInAnonymously","userCredential","uid","user","userDoc","exists","set","updateUser","userId","params","update","createReviewRef","shopId","uploadImage","uri","path","fetch","localUri","blob","ref","storage","child","downloadUrl","put","getDownloadURL","console","log","getReviews","reviewDocs"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport Constants from \"expo-constants\";\n/* types */\nimport { Shop } from \"../types/shop\";\nimport { initialUser, User } from \"../types/user\";\nimport { Review } from \"../types/review\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Constants.manifest.extra.firebase);\n}\n\nexport const getShops = async () => {\n  const snapshot = await firebase\n    .firestore()\n    .collection(\"shops\")\n    .orderBy(\"score\", \"desc\")\n    .get();\n  const shops = snapshot.docs.map(\n    (doc) => ({ ...doc.data(), id: doc.id } as Shop)\n  );\n  return shops;\n};\n\nexport const signin = async () => {\n  const userCredential = await firebase.auth().signInAnonymously();\n  const { uid } = userCredential.user;\n  const userDoc = await firebase.firestore().collection(\"users\").doc(uid).get();\n  if (!userDoc.exists) {\n    await firebase.firestore().collection(\"users\").doc(uid).set(initialUser);\n    return {\n      ...initialUser,\n      id: uid,\n    } as User;\n  } else {\n    return {\n      id: uid,\n      ...userDoc.data(),\n    } as User;\n  }\n};\nexport const updateUser = async (userId: string, params: any) => {\n  await firebase.firestore().collection(\"users\").doc(userId).update(params);\n};\n\nexport const createReviewRef = async (shopId: string) => {\n  return await firebase\n    .firestore()\n    .collection(\"shops\")\n    .doc(shopId)\n    .collection(\"reviews\")\n    .doc();\n};\n\nexport const uploadImage = async (uri: string, path: string) => {\n  // uriをblobに変換\n  const localUri = await fetch(uri);\n  const blob = await localUri.blob();\n  // storegaにアップロード\n  const ref = firebase.storage().ref().child(path);\n\n  let downloadUrl = \"\";\n  try {\n    await ref.put(blob);\n    downloadUrl = await ref.getDownloadURL();\n  } catch (err) {\n    console.log(err);\n  }\n  return downloadUrl;\n};\n\nexport const getReviews = async (shopId: string) => {\n  const reviewDocs = await firebase\n    .firestore()\n    .collection(\"shops\")\n    .doc(shopId)\n    .collection(\"reviews\")\n    .orderBy(\"createdAt\", \"desc\")\n    .get();\n  return reviewDocs.docs.map(\n    (doc) => ({ ...doc.data(), id: doc.id } as Review)\n  );\n};"]},"metadata":{},"sourceType":"module"}